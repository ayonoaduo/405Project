{"ast":null,"code":"var _jsxFileName = \"/Users/okienayonoadu/ProjectVitality/projectvitality/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Authentication from \"./authentication/Authentication\";\nimport Navigation from \"./Navigation\";\nimport HomePage from \"./icons/HomePage\";\nimport PostPage from \"./icons/PostPage\";\nimport ReportSubmitted from \"./components/ReportSubmitted\";\nimport ProfilePage from \"./icons/ProfilePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Settings from \"./components/Settings\";\nimport { auth } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null); //state to keep track of the user\n\n  const [username, setUsername] = useState(\"\");\n  const [resetPass, setResetPass] = useState(false); //state to check if the user wants to reset password\n\n  const [signInYes, setSignIn] = useState(true); // state to check if the user wants to sign in\n\n  const [signUpYes, setSignUp] = useState(false); //state to check if the user wants to sign up\n\n  const [progress, setProgress] = useState(0);\n  const [address, setAddress] = React.useState(\"\");\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  useEffect(() => {\n    //listener for any authentication state change\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        //user has logged in..\n        console.log(authUser); //check the console if someone is logged in\n\n        setUser(authUser); //cookie tracking to keep you logged in\n\n        if (authUser.displayName) {//dont update the username if they dont have a display name\n        } else {\n          //if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set the display name in firebase\n\n          });\n        }\n      } else {\n        //user logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting useEffect to avoid\n      //duplicate listeners\n      unsubscribe();\n    };\n  }, [user, username]); //function \"register\" is fired up when the user tries to sign up\n\n  const register = e => {\n    e.preventDefault(); //prevent refresh when button is clicked\n\n    auth.createUserWithEmailAndPassword(emailRef.current.value, //get the email value typed\n    passwordRef.current.value //get the password\n    ) //send Email verification\n    .then(function (authData) {\n      authData.user.sendEmailVerification();\n    }, //if email wasnt sent\n    function (error) {\n      //An error happened\n      alert(error.message);\n    }).then(authUser => {\n      console.log(authUser);\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  const signIn = e => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value).then(authUser => {\n      console.log(authUser);\n    }).catch(error => alert(error.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          user: user,\n          setSignIn: setSignIn,\n          setSignUp: setSignUp,\n          progress: progress,\n          setProgress: setProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {\n              user: user,\n              username: username,\n              address: address,\n              setAddress: setAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Homepage\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {\n              user: user,\n              username: username,\n              address: address,\n              setAddress: setAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/PostPage\",\n            children: /*#__PURE__*/_jsxDEV(PostPage, {\n              user: user,\n              progress: progress,\n              setProgress: setProgress,\n              address: address,\n              setAddress: setAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/ProfilePage\",\n            children: /*#__PURE__*/_jsxDEV(ProfilePage, {\n              user: user,\n              username: username,\n              address: address,\n              setAddress: setAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/PostPage/ReportSubmitted\",\n            children: /*#__PURE__*/_jsxDEV(ReportSubmitted, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/ProfilePage/Settings\",\n            children: /*#__PURE__*/_jsxDEV(Settings, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \"//else show authentication screen\", /*#__PURE__*/_jsxDEV(Authentication, {\n        signUpYes: signUpYes,\n        setSignUp: setSignUp,\n        signInYes: signInYes,\n        setSignIn: setSignIn,\n        signIn: signIn,\n        register: register,\n        setUsername: setUsername,\n        username: username,\n        emailRef: emailRef,\n        passwordRef: passwordRef,\n        resetPass: resetPass,\n        setResetPass: setResetPass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2J9wBLF5wCZc/Esq8INwpuWJnxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/okienayonoadu/ProjectVitality/projectvitality/src/App.js"],"names":["React","useEffect","useState","useRef","Authentication","Navigation","HomePage","PostPage","ReportSubmitted","ProfilePage","BrowserRouter","Router","Switch","Route","Settings","auth","App","user","setUser","username","setUsername","resetPass","setResetPass","signInYes","setSignIn","signUpYes","setSignUp","progress","setProgress","address","setAddress","emailRef","passwordRef","unsubscribe","onAuthStateChanged","authUser","console","log","displayName","updateProfile","register","e","preventDefault","createUserWithEmailAndPassword","current","value","then","authData","sendEmailVerification","error","alert","message","catch","signIn","signInWithEmailAndPassword"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Authentication from \"./authentication/Authentication\";\nimport Navigation from \"./Navigation\";\nimport HomePage from \"./icons/HomePage\";\nimport PostPage from \"./icons/PostPage\";\nimport ReportSubmitted from \"./components/ReportSubmitted\";\nimport ProfilePage from \"./icons/ProfilePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Settings from \"./components/Settings\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const [user, setUser] = useState(null); //state to keep track of the user\n  const [username, setUsername] = useState(\"\");\n  const [resetPass, setResetPass] = useState(false); //state to check if the user wants to reset password\n  const [signInYes, setSignIn] = useState(true); // state to check if the user wants to sign in\n  const [signUpYes, setSignUp] = useState(false); //state to check if the user wants to sign up\n  const [progress, setProgress] = useState(0);\n  const [address, setAddress] = React.useState(\"\");\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  useEffect(() => {\n    //listener for any authentication state change\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        //user has logged in..\n        console.log(authUser); //check the console if someone is logged in\n        setUser(authUser); //cookie tracking to keep you logged in\n\n        if (authUser.displayName) {\n          //dont update the username if they dont have a display name\n        } else {\n          //if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set the display name in firebase\n          });\n        }\n      } else {\n        //user logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting useEffect to avoid\n      //duplicate listeners\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  //function \"register\" is fired up when the user tries to sign up\n  const register = (e) => {\n    e.preventDefault(); //prevent refresh when button is clicked\n\n    auth\n      .createUserWithEmailAndPassword(\n        emailRef.current.value, //get the email value typed\n        passwordRef.current.value //get the password\n      )\n      //send Email verification\n      .then(\n        function (authData) {\n          authData.user.sendEmailVerification();\n        },\n        //if email wasnt sent\n        function (error) {\n          //An error happened\n          alert(error.message);\n        }\n      )\n\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <div>\n          {/* display the navigation bar if the user exists */}\n          <Navigation\n            user={user}\n            setSignIn={setSignIn}\n            setSignUp={setSignUp}\n            progress={progress}\n            setProgress={setProgress}\n          />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage\n                user={user}\n                username={username}\n                address={address}\n                setAddress={setAddress}\n              />\n            </Route>\n\n            <Route exact path=\"/Homepage\">\n              <HomePage\n                user={user}\n                username={username}\n                address={address}\n                setAddress={setAddress}\n              />\n            </Route>\n\n            <Route exact path=\"/PostPage\">\n              <PostPage\n                user={user}\n                progress={progress}\n                setProgress={setProgress}\n                address={address}\n                setAddress={setAddress}\n              />\n            </Route>\n\n            <Route exact path=\"/ProfilePage\">\n              <ProfilePage\n                user={user}\n                username={username}\n                address={address}\n                setAddress={setAddress}\n              />\n            </Route>\n\n            <Route exact path=\"/PostPage/ReportSubmitted\">\n              <ReportSubmitted />\n            </Route>\n\n            <Route exact path=\"/ProfilePage/Settings\">\n              <Settings user={user} />\n            </Route>\n          </Switch>\n        </div>\n        //else show authentication screen\n        <Authentication\n          signUpYes={signUpYes}\n          setSignUp={setSignUp}\n          signInYes={signInYes}\n          setSignIn={setSignIn}\n          signIn={signIn}\n          register={register}\n          setUsername={setUsername}\n          username={username}\n          emailRef={emailRef}\n          passwordRef={passwordRef}\n          resetPass={resetPass}\n          setResetPass={setResetPass}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}